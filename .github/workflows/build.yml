name: Windows Build & Test

on:
  push:
    branches: [ main ]
    tags: ["*"]


jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v2

      - name: Set Version
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "PROJECT_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "PROJECT_VERSION=dev-${{ github.run_number }}" >> $GITHUB_ENV
          fi

      - name: Get Tag Annotation
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          # Extract the annotation message from the tag
          TAG_MESSAGE=$(git for-each-ref refs/tags/${{ github.ref_name }} --format='%(contents)')
          echo "TAG_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "${TAG_MESSAGE}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Configure CMake (Release)
        run: cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        run: ctest --test-dir build --verbose

      - name: Zip EXE
        run: |
          powershell Compress-Archive -Path build\Release\adf_make.exe -DestinationPath build\Release\adf_make_win32_${{ env.PROJECT_VERSION }}.zip

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: "adf_make_win32_${{ env.PROJECT_VERSION }}"
          path: "build/Release/adf_make_win32_${{ env.PROJECT_VERSION }}.zip"

      - name: Create Release and Upload Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ env.TAG_MESSAGE }}
          draft: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            build/Release/adf_make_win32_${{ env.PROJECT_VERSION }}.zip